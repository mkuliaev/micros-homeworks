volumes:
  data:
  es:
  prometheus-data:
  grafana_data:

services:
  storage:
    image: minio/minio:latest
    command: server /data
    restart: always
    expose: 
      - 9000
    environment:
      MINIO_ROOT_USER: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${Storage_Secret:-STORAGE_SECRET_KEY}
      MINIO_PROMETHEUS_AUTH_TYPE: public
    volumes:
      - data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    depends_on:
      - storage
    restart: on-failure
    entrypoint: > 
      /bin/sh -c "      
      /usr/bin/mc config host add storage http://storage:9000 ${Storage_AccessKey-STORAGE_ACCESS_KEY} ${Storage_Secret-STORAGE_SECRET_KEY} &&
      /usr/bin/mc mb --ignore-existing storage/${Storage_Bucket:-data} &&
      /usr/bin/mc policy set download storage/${Storage_Bucket:-data} &&
      exit 0;
      "

  uploader:
    build: ./uploader
    depends_on:
      - storage
      - createbuckets
    expose: 
      - 3000
    environment:
      PORT: 3000
      S3_HOST: storage
      S3_PORT: 9000
      S3_ACCESS_KEY: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      S3_ACCESS_SECRET: ${Storage_Secret:-STORAGE_SECRET_KEY}
      S3_BUCKET: ${Storage_Bucket:-STORAGE_BUCKET}
  
  security:
    build: ./security
    expose: 
      - 3000
    environment:
      PORT: 3000

  gateway:
    image: nginx:alpine
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:8080"      
    depends_on:
      - storage
      - uploader
      - security
      
  elasticsearch:
    image: elasticsearch:8.15.0
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - cluster.name=reocoker-cluster
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      
  kibana:
    container_name: kibana
    image: kibana:8.15.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - 
      -
    ports:
      - 8081:5601
    depends_on:
      - elasticsearch

  vector:
    container_name: vector
    image: timberio/vector:0.39.0-alpine
    volumes:
      - ./vector.yaml:/etc/vector/vector.yaml:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8686:8686
    depends_on:
      - elasticsearch
      - kibana
